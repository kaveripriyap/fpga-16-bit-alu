/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module arith_16_12 (
    input [15:0] x,
    input [15:0] y,
    input [1:0] arithAlufn,
    output reg [15:0] arithOut,
    output reg z,
    output reg v,
    output reg n
  );
  
  
  
  reg [15:0] temp;
  
  reg [15:0] xb;
  
  always @* begin
    
    case (arithAlufn)
      2'h0: begin
        temp = $signed(x) + $signed(y);
        xb = y;
        v = ((x[15+0-:1] & y[15+0-:1] & (~temp[15+0-:1])) | ((~x[15+0-:1]) & (~y[15+0-:1]) & temp[15+0-:1]));
      end
      2'h1: begin
        temp = $signed(x) - $signed(y);
        xb = 1'h0 - y;
        v = ((x[15+0-:1] & xb[15+0-:1] & (~temp[15+0-:1])) | ((~x[15+0-:1]) & (~xb[15+0-:1]) & temp[15+0-:1]));
      end
      2'h2: begin
        temp = x * y;
        v = 1'h0;
      end
      default: begin
        temp = 16'h0000;
        v = 1'h0;
      end
    endcase
    n = temp[15+0-:1];
    z = ~(|temp);
    arithOut = temp;
  end
endmodule
