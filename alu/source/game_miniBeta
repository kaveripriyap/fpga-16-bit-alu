module game_miniBeta (
    input btn[9],
    input clk,  // clock
    input rst,  // reset
    output led[9],
    output check_led
  ) {
  
  //temp variables for A and B values to be inputted in the ALU
  sig inputAlu_a[16];
  sig inputAlu_b[16];
  
  alu game_alu; //alu module of the game, our games uses boole, comparator, increment and decrement modules

  .clk(clk){
    .rst(rst){
      counter slow_timer(#SIZE(1),#DIV(20)); 
    }
  }
  .clk(slow_timer.value){
    .rst(rst){
      random_pattern rand; //our randoom module
      game_CU game_controlunit; //control unit module of the game
      game_miniRegfile regfile; //regfile module of the game
    }
  }
  
  always {
    
    //Setup REGFILE unit 
    regfile.we = game_controlunit.we;
    regfile.write_address = game_controlunit.rc;
    regfile.read_address_a = game_controlunit.ra;
    regfile.read_address_b = game_controlunit.rb;
    
    game_controlunit.rbData = regfile.out_b;
    
    //asel mux
    case(game_controlunit.asel){
      b000  : inputAlu_a = regfile.out_a;
      b001  : inputAlu_a = h0000; 
      b010  : inputAlu_a = h0001;
      b011  : inputAlu_a = h0026;
      b100  : inputAlu_a[8:0] = btn; 
              inputAlu_a[15:9] = b0000000;
      default : 
          inputAlu_a = h0000;
    }
    
    //bsel mux
    case(game_controlunit.bsel){
      b00 : inputAlu_b = regfile.out_b;
      b01 : inputAlu_b = h0000;
      b10 : inputAlu_b = h0001;
      b11 : inputAlu_b = h0009;
      default: 
          inputAlu_b = h0000;
      
    }
    
    //ALU
    game_alu.x = inputAlu_a;
    game_alu.y = inputAlu_b;
    game_alu.alufn = game_controlunit.alufn;
   
    
    //wdsel mux
    case (game_controlunit.wdsel){
      b00 : regfile.data = game_alu.out;
      b01 : regfile.data = b1111111111111111;
      b10 : regfile.data = b0101010101010101;
      b11 : regfile.data[8:0] = rand.ptn;
            regfile.data[15:9] = b0000000;
      default :
          regfile.data = game_alu.out;
    }
    
    //output to the au_top
    led = game_controlunit.led;
    check_led = game_controlunit.match_led;
  }
}