module adder_16 (
    input alufn[6],
    input x[16],
    input y[16],
    
    output z,
    output v,
    output n,
    output adder_out[16]
  ) {
  sig temp[16];
  
  always {
    case (alufn[3:2]){
      4b0000: temp = x + y;                  
      4b0001: temp = x - y;                 
      
      // ADDITIONAL FUNCTIONS:
      4b0010: temp = (x * y);               
      // MODULO
      4b0111: 
        if (y != 0) // avoid dividing by zero
          temp = x - ((x / y) * y); 
        else
          temp = x; 
      default: temp = 0;
    }
    
    z = temp == 0;
    v = (x[15] & (y[15] ^ alufn[0]) & ~temp[15] ) | ( ~x[15] & ~(y[15] ^ alufn[0]) & temp[15]);
    n = temp[15];
    
    adder_out = temp;
  }
}